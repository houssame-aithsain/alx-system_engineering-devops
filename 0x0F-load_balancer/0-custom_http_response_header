#!/usr/bin/env bash
# This script sets up a basic web server using Nginx. It installs Nginx if not present,
# configures firewall rules, sets permissions for web content, and configures Nginx with custom settings.

# Uncomment to enable debugging
# set -x

# Function to install a package if it's not already installed
install() {
    if ! command -v "$1" &> /dev/null; then
        sudo apt-get update -y -qq && \
        sudo apt-get install -y "$1" -qq
    fi
}

# Install Nginx
install nginx

# Allow Nginx through the firewall
sudo ufw allow 'Nginx HTTP'

# Ensure the /var/www directory exists and give the user ownership for easy editing
if [ ! -d "/var/www" ]; then
    sudo mkdir -p /var/www
fi
sudo chown -R "$USER":"$USER" /var/www
sudo chmod -R 755 /var/www

# Create necessary directories if they don't exist
for dir in /var/www/html /var/www/error; do
    if [ ! -d "$dir" ]; then
        mkdir -p "$dir"
    fi
done

# Create a new index page
echo "Hello World!" > /var/www/html/index.html

# Create a new custom error page
echo "Ceci n'est pas une page" > /var/www/html/error_404.html

# Backup the default Nginx server configuration
sudo cp /etc/nginx/sites-enabled/default /etc/nginx/sites-enabled/default.backup

# Define new server configuration
server_config="server {
    listen 80 default_server;
    listen [::]:80 default_server;
    root /var/www/html;
    index index.html index.htm index.nginx-debian.html;
    server_name _;
    add_header X-Served-By \$hostname;
    location / {
        try_files \$uri \$uri/ =404;
    }
    if (\$request_filename ~ redirect_me) {
        rewrite ^ https://th3-gr00t.tk/ permanent;
    }
    error_page 404 /error_404.html;
    location = /error_404.html {
        internal;
    }
}"

# Apply the new Nginx server configuration
echo "$server_config" | sudo tee /etc/nginx/sites-enabled/default > /dev/null

# Restart Nginx to apply changes
sudo service nginx restart
